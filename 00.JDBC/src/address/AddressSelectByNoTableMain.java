package address;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;

public class AddressSelectByNoTableMain {
	public static void main(String[] args) throws Exception{
		String driverClass = "oracle.jdbc.OracleDriver";
		String url = "jdbc:oracle:thin:@210.16.214.203:1521:XE";
		String user = "iot33";
		String password = "iot33";
		String selectSQL = "select no, id, name, phone, address from address where no = 10"; 
		
		Class.forName(driverClass);
		Connection con = DriverManager.getConnection(url, user, password);
		System.out.println("1. Connection : " + con);
		Statement stmt = con.createStatement();
		/*
		 <<Statement>>
		 ResultSet executeQuery(String sql)
                throws SQLException
         Executes the given SQL statement, which returns a single ResultSet object.
         
         Parameters:
         sql - an SQL statement to be sent to the database, typically a static SQL SELECT statement
         Returns:
a ResultSet object that contains the data produced by the given query; never null
		 */
		
		ResultSet rs = stmt.executeQuery(selectSQL);
		boolean isExist = rs.next();
		
		/*
		 <<ResultSet>>
		 public interface ResultSet extends Wrapper, AutoCloseable
		 
		 A table of data representing a database result set,
		 which is usually generated by executing a statement that queries the database.
		 A ResultSet object maintains a cursor pointing to its current row of data.
		 Initially the cursor is positioned before the first row.
		 
		 The next method moves the cursor to the next row,
		 and because it returns false when there are no more rows in the ResultSet object,
		 it can be used in a while loop to iterate through the result set.
		 A default ResultSet object is not updatable and has a cursor that moves forward only.
		 Thus, you can iterate through it only once and only from the first row to the last row.
		 */
		
		if(isExist) {
			String no = rs.getString("no");
			String id = rs.getString("id");
			String name = rs.getString("name");
			String phone = rs.getString("phone");
			String address = rs.getString("address");
			System.out.println(no + "\t" + id + "\t" + name + "\t" + phone + "\t" + address);
		} else {
			System.out.println("no data!!");
		}
		
		stmt.close();
		con.close();
	}
}
